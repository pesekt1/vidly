{"version":3,"sources":["services/httpService.js","services/moviesService.js","services/getGenres.js","components/standard/pagination.jsx","components/listGroup.jsx","utils/paginate.js","components/standard/like.jsx","components/standard/tableHeader.jsx","components/standard/tableBody.jsx","components/standard/table.jsx","services/authService.js","components/moviesTable.jsx","components/standard/searchBox.jsx","components/movies.jsx","components/standard/navBar.jsx","components/standard/protectedRoute.jsx","components/customers.jsx","components/rentals.jsx","components/not-found.jsx","components/standard/input.jsx","components/standard/select.jsx","components/standard/form.jsx","components/standard/loginForm.jsx","services/userService.js","components/standard/registerForm.jsx","components/standard/movieForm.jsx","components/standard/logout.jsx","App.js","serviceWorker.js","services/logService.js","index.js"],"names":["axios","defaults","baseURL","process","interceptors","response","use","error","console","log","status","toast","Promise","reject","get","delete","post","put","setJwt","jwt","headers","common","getMovie","movieId","http","apiEndpoint","deleteMovie","movie","_id","saveMovie","a","async","body","getGenres","Pagination","this","props","itemsCount","pageSize","onPageChange","currentPage","pagesCount","Math","ceil","pages","_","range","length","aria-label","className","map","page","key","onClick","Component","ListGroup","genres","selectedGenre","dynamicClassAllGenres","g","name","paginate","items","pageNumber","startIndex","slice","take","value","Like","dynamicClass","liked","TableHeader","raiseSort","path","onSort","sortColumn","newOrder","order","renderSortIcon","column","columns","scope","label","TableBody","item","content","data","getCellKey","renderCell","Table","getJwt","localStorage","getItem","login","email","password","setItem","loginWithJwt","logout","removeItem","register","getCurrentUser","jwtDecode","MoviesTable","to","title","onLike","deleteColumn","onDelete","user","auth","isAdmin","push","movies","SearchBox","onChange","type","placeholder","Movies","state","search","handleDelete","originalPosts","allMovies","filter","m","moviesByGender","filterGender","setState","alert","posts","handleLike","index","indexOf","handlePagination","handleGenres","genre","handleSort","handleSearch","currentTarget","toLowerCase","startsWith","selectedMovies","filterSearch","orderBy","Fragment","NavBar","id","ProtectedRoute","component","render","rest","pathname","from","location","Customers","Rentals","NotFound","Input","htmlFor","Select","options","option","Form","errors","schema","validate","Joi","object","abortEarly","details","message","validateProperty","obj","propertySchema","handleSubmit","e","preventDefault","doSubmit","handleChange","input","errorMessage","disabled","LoginForm","username","require","string","required","window","onSubmit","renderInput","renderButton","standardUser","RegisterForm","tlds","allow","min","userService","MovieForm","genreId","numberInStock","dailyRentalRate","match","params","mapToViewModel","history","replace","populateGenres","populateMovie","renderSelect","Logout","App","exact","Boolean","hostname","init","Sentry","dsn","logService","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0df8af45.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport function setJwt(jwt) {\r\n  //if user is not logged in then this header will be undefined\r\n  axios.defaults.headers.common[\"x-auth-token\"] = jwt;\r\n}\r\n\r\n//set default baseURL so when we use http request this will be add in front\r\n//example: http.get(\"/users\") will be http.get(\"http://localhost:3900/api/users\") in development env\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.response.use(null, error => {\r\n  console.log(\"interceptor called\");\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status < 500;\r\n\r\n  if (!expectedError) {\r\n    toast.error(\"Unexpected error occured\");\r\n    console.log(\"logging unexpected error\", error);\r\n  }\r\n  return Promise.reject(error);\r\n});\r\n\r\nexport default {\r\n  get: axios.get,\r\n  delete: axios.delete,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  setJwt\r\n};\r\n","import http from \"./httpService\";\r\n\r\nconst apiEndpoint = \"/movies\";\r\n\r\nexport function getMovies() {\r\n  return http.get(apiEndpoint);\r\n}\r\n\r\nexport function getMovie(movieId) {\r\n  return http.get(apiEndpoint + \"/\" + movieId);\r\n}\r\n\r\nexport function deleteMovie(movie) {\r\n  return http.delete(apiEndpoint + \"/\" + movie._id);\r\n}\r\n\r\nexport async function saveMovie(movie) {\r\n  if (movie._id) {\r\n    const body = { ...movie };\r\n    delete body._id; // we have to delete _id property before updating an existing object\r\n    await http.put(apiEndpoint + \"/\" + movie._id, body); // because we give _id in http so it should not be in the body\r\n  } else {\r\n    await http.post(apiEndpoint, movie);\r\n  }\r\n}\r\n","import http from \"./httpService\";\r\n\r\nexport function getGenres() {\r\n  return http.get(\"/genres\");\r\n}\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Pagination extends Component {\r\n  render() {\r\n    const { itemsCount, pageSize, onPageChange, currentPage } = this.props;\r\n    const pagesCount = Math.ceil(itemsCount / pageSize);\r\n    const pages = _.range(1, pagesCount + 1); // makes array [1,2,3,...]\r\n\r\n    if (pages.length === 1) return null;\r\n\r\n    return (\r\n      <nav aria-label=\"Page navigation example\">\r\n        <ul className=\"pagination\">\r\n          {pages.map(page => (\r\n            <li\r\n              key={page}\r\n              className={\r\n                page === currentPage ? \"page-item active\" : \"page-item\"\r\n              }\r\n            >\r\n              <a className=\"page-link\" onClick={() => onPageChange(page)}>\r\n                {page}\r\n              </a>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nPagination.propTypes = {\r\n  itemsCount: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired,\r\n  currentPage: PropTypes.number.isRequired\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ListGroup extends Component {\r\n  render() {\r\n    const { genres, selectedGenre } = this.props;\r\n    const dynamicClassAllGenres =\r\n      selectedGenre === 0 ? \"list-group-item active\" : \"list-group-item\";\r\n\r\n    return (\r\n      <ul className=\"list-group\">\r\n        <li\r\n          className={dynamicClassAllGenres}\r\n          onClick={() => this.props.onClick(0)}\r\n        >\r\n          All Genres\r\n        </li>\r\n        {genres.map(g => (\r\n          <li\r\n            key={g._id}\r\n            className={\r\n              selectedGenre === g.name\r\n                ? \"list-group-item active\"\r\n                : \"list-group-item\"\r\n            }\r\n            onClick={() => this.props.onClick(g.name)}\r\n          >\r\n            {g.name}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListGroup;\r\n","import _ from \"lodash\";\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n  const startIndex = (pageNumber - 1) * pageSize;\r\n  return _(items)\r\n    .slice(startIndex)\r\n    .take(pageSize)\r\n    .value();\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nclass Like extends Component {\r\n  render() {\r\n    let dynamicClass = \"fa fa-heart\";\r\n    dynamicClass += this.props.liked ? \"\" : \"-o\";\r\n    return <i className={dynamicClass} onClick={this.props.onClick}></i>;\r\n  }\r\n}\r\n\r\nexport default Like;\r\n","import React, { Component } from \"react\";\r\n\r\nclass TableHeader extends Component {\r\n  raiseSort = path => {\r\n    const { onSort, sortColumn } = this.props;\r\n\r\n    let newOrder = \"asc\";\r\n    if (path === sortColumn.path) {\r\n      newOrder = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n    }\r\n    onSort({ path: path, order: newOrder });\r\n  };\r\n\r\n  renderSortIcon = column => {\r\n    const { sortColumn } = this.props;\r\n\r\n    if (column.path !== sortColumn.path) return null;\r\n    if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\"></i>;\r\n    return <i className=\"fa fa-sort-desc\"></i>;\r\n  };\r\n\r\n  render() {\r\n    const { columns } = this.props;\r\n    return (\r\n      <thead>\r\n        <tr>\r\n          {columns.map(column => (\r\n            <th\r\n              key={column.path || column.key}\r\n              onClick={() => this.raiseSort(column.path)}\r\n              scope=\"col\"\r\n            >\r\n              {column.label}\r\n              {this.renderSortIcon(column)}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableHeader;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nclass TableBody extends Component {\r\n  renderCell(item, column) {\r\n    if (column.content) return column.content(item);\r\n\r\n    return _.get(item, column.path);\r\n  }\r\n\r\n  getCellKey(item, column) {\r\n    return item._id + (column.path || column.key);\r\n  }\r\n\r\n  render() {\r\n    const { data, columns } = this.props;\r\n\r\n    return (\r\n      <tbody>\r\n        {data.map(item => (\r\n          <tr key={item._id}>\r\n            {columns.map(column => (\r\n              <td key={this.getCellKey(item, column)}>\r\n                {this.renderCell(item, column)}\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableBody;\r\n","import React, { Component } from \"react\";\r\nimport TableHeader from \"./tableHeader\";\r\nimport TableBody from \"./tableBody\";\r\n\r\nclass Table extends Component {\r\n  render() {\r\n    const { data, sortColumn, onSort, columns } = this.props;\r\n\r\n    return (\r\n      <table className=\"table\">\r\n        <TableHeader\r\n          columns={columns}\r\n          sortColumn={sortColumn}\r\n          onSort={onSort}\r\n        />\r\n        <TableBody data={data} columns={columns} />\r\n      </table>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Table;\r\n","import jwtDecode from \"jwt-decode\";\r\nimport http from \"./httpService\";\r\n\r\nconst apiEndpoint = \"/auth\";\r\nconst tokenKey = \"token\";\r\n\r\nhttp.setJwt(getJwt());\r\n\r\nexport async function login(email, password) {\r\n  const { data: jwt } = await http.post(apiEndpoint, { email, password });\r\n  localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function getJwt() {\r\n  return localStorage.getItem(tokenKey);\r\n}\r\n\r\nexport function loginWithJwt(jwt) {\r\n  localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function getCurrentUser() {\r\n  try {\r\n    const jwt = localStorage.getItem(tokenKey);\r\n    const user = jwtDecode(jwt);\r\n    return user;\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function register(response) {\r\n  localStorage.setItem(tokenKey, response.headers[\"x-auth-token\"]);\r\n}\r\n\r\nexport function logout() {\r\n  localStorage.removeItem(tokenKey);\r\n}\r\n\r\nexport default {\r\n  login,\r\n  loginWithJwt,\r\n  logout,\r\n  register,\r\n  getCurrentUser,\r\n  getJwt\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Like from \"./standard/like\";\r\nimport Table from \"./standard/table\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass MoviesTable extends Component {\r\n  columns = [\r\n    {\r\n      path: \"title\",\r\n      label: \"Title\",\r\n      content: movie => <Link to={`/movies/${movie._id}`}>{movie.title}</Link>\r\n    },\r\n    { path: \"genre.name\", label: \"Name\" },\r\n    { path: \"numberInStock\", label: \"Stock\" },\r\n    { path: \"dailyRentalRate\", label: \"Rate\" },\r\n    {\r\n      key: \"like\",\r\n      content: movie => (\r\n        <Like liked={movie.liked} onClick={() => this.props.onLike(movie)} />\r\n      )\r\n    }\r\n  ];\r\n\r\n  deleteColumn = {\r\n    key: \"delete\",\r\n    content: movie => (\r\n      <button\r\n        onClick={() => this.props.onDelete(movie)}\r\n        className=\"btn btn-danger btn-sm\"\r\n      >\r\n        Delete\r\n      </button>\r\n    )\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    const user = auth.getCurrentUser();\r\n    if (user && user.isAdmin) this.columns.push(this.deleteColumn);\r\n  }\r\n\r\n  render() {\r\n    const { movies, sortColumn, onSort } = this.props;\r\n    return (\r\n      <Table\r\n        sortColumn={sortColumn}\r\n        onSort={onSort}\r\n        data={movies}\r\n        columns={this.columns}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesTable;\r\n","import React from \"react\";\r\n\r\nconst SearchBox = props => {\r\n  const { value, onChange } = props;\r\n\r\n  return (\r\n    <input\r\n      name=\"query\"\r\n      value={value}\r\n      onChange={onChange}\r\n      className=\"form-control mr-sm-2\"\r\n      type=\"search\"\r\n      placeholder=\"Search\"\r\n      aria-label=\"Search\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getMovies, deleteMovie } from \"../services/moviesService\";\r\nimport { getGenres } from \"../services/getGenres\";\r\nimport Pagination from \"./standard/pagination\";\r\nimport ListGroup from \"./listGroup.jsx\";\r\nimport { paginate } from \"../utils/paginate\";\r\nimport MoviesTable from \"./moviesTable.jsx\";\r\nimport SearchBox from \"./standard/searchBox.jsx\";\r\n\r\nclass Movies extends Component {\r\n  state = {\r\n    search: \"\",\r\n    movies: [],\r\n    genres: [],\r\n    pageSize: 4,\r\n    currentPage: 1,\r\n    sortColumn: { path: \"title\", order: \"asc\" },\r\n    selectedGenre: 0\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { data: genres } = await getGenres();\r\n    const { data: movies } = await getMovies();\r\n    this.setState({ movies: movies, genres: genres });\r\n  }\r\n\r\n  filterGender(movies) {\r\n    const moviesByGender =\r\n      this.state.selectedGenre === 0\r\n        ? movies\r\n        : movies.filter(movie => movie.genre.name === this.state.selectedGenre);\r\n    return moviesByGender;\r\n  }\r\n\r\n  filterSearch(movies) {\r\n    return movies.filter(m =>\r\n      m.title.toLowerCase().startsWith(this.state.search.toLowerCase())\r\n    );\r\n  }\r\n\r\n  handleDelete = async movie => {\r\n    //optimistic operation: first we render chagnes for the user and if there is error we roll-back to original state.\r\n    const originalPosts = this.state.movies;\r\n    const { movies: allMovies, currentPage, pageSize } = this.state;\r\n\r\n    const movies = allMovies.filter(m => m._id !== movie._id);\r\n\r\n    const moviesByGender = this.filterGender(movies);\r\n    const paginatedMovies = paginate(moviesByGender, currentPage, pageSize);\r\n\r\n    if (paginatedMovies.length === 0 && this.state.currentPage > 1) {\r\n      this.setState({ currentPage: currentPage - 1 });\r\n    }\r\n    this.setState({ movies: movies });\r\n\r\n    try {\r\n      await deleteMovie(movie);\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 404)\r\n        alert(\"movie has already been deleted\");\r\n\r\n      this.setState({ posts: originalPosts });\r\n    }\r\n  };\r\n\r\n  handleLike = movie => {\r\n    const movies = [...this.state.movies];\r\n    const index = this.state.movies.indexOf(movie);\r\n    movies[index] = { ...movie };\r\n    movies[index].liked = !movies[index].liked;\r\n    this.setState({ movies: movies });\r\n  };\r\n\r\n  handlePagination = page => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleGenres = genre => {\r\n    this.setState({ selectedGenre: genre, currentPage: 1, search: \"\" });\r\n  };\r\n\r\n  handleSort = sortColumn => {\r\n    this.setState({ sortColumn });\r\n  };\r\n\r\n  handleSearch = ({ currentTarget: search }) => {\r\n    this.setState({ search: search.value });\r\n    if (search.value.length > 0)\r\n      this.setState({ selectedGenre: 0, currentPage: 1 });\r\n  };\r\n\r\n  render() {\r\n    const { length: movieCount } = this.state.movies;\r\n    const {\r\n      search,\r\n      pageSize,\r\n      movies: allMovies,\r\n      currentPage,\r\n      genres,\r\n      sortColumn,\r\n      selectedGenre\r\n    } = this.state;\r\n\r\n    //if (movieCount === 0) return <p>There are no movies in the database.</p>;\r\n\r\n    //now we filter either by gender or by search box\r\n    const selectedMovies = search\r\n      ? this.filterSearch(allMovies)\r\n      : this.filterGender(allMovies);\r\n\r\n    const sortedMovies = _.orderBy(\r\n      selectedMovies,\r\n      [sortColumn.path],\r\n      [sortColumn.order]\r\n    );\r\n    const movies = paginate(sortedMovies, currentPage, pageSize);\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row\">\r\n          <div className=\"col-3\">\r\n            <ListGroup\r\n              onClick={this.handleGenres}\r\n              genres={genres}\r\n              selectedGenre={selectedGenre}\r\n            />\r\n          </div>\r\n          <div className=\"col\">\r\n            {this.props.user && (\r\n              <Link to=\"movies/new\" className=\"btn btn-primary\">\r\n                New Movie\r\n              </Link>\r\n            )}\r\n            <p>Showing {selectedMovies.length} movies from the database.</p>\r\n            <SearchBox onChange={this.handleSearch} value={this.state.search} />\r\n            <MoviesTable\r\n              movies={movies}\r\n              onLike={this.handleLike}\r\n              onDelete={this.handleDelete}\r\n              sortColumn={sortColumn}\r\n              onSort={this.handleSort}\r\n            />\r\n          </div>\r\n        </div>\r\n        <Pagination\r\n          itemsCount={selectedMovies.length}\r\n          pageSize={pageSize}\r\n          onPageChange={this.handlePagination}\r\n          currentPage={currentPage}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n","import React, { Component } from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nclass NavBar extends Component {\r\n  render() {\r\n    const { user } = this.props;\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          Vidly\r\n        </Link>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n          <ul className=\"navbar-nav\">\r\n            <NavLink className=\"nav-link\" to=\"/customers\">\r\n              Customers <span className=\"sr-only\">(current)</span>\r\n            </NavLink>\r\n            <Link className=\"nav-link\" to=\"/rentals\">\r\n              Rentals\r\n            </Link>\r\n            <NavLink className=\"nav-link\" to=\"/movies\">\r\n              Movies\r\n            </NavLink>\r\n            {!user && (\r\n              <React.Fragment>\r\n                <NavLink className=\"nav-link\" to=\"/login\">\r\n                  Login\r\n                </NavLink>\r\n                <NavLink className=\"nav-link\" to=\"/register\">\r\n                  Register\r\n                </NavLink>\r\n              </React.Fragment>\r\n            )}\r\n            {user && (\r\n              <React.Fragment>\r\n                <NavLink className=\"nav-link\" to=\"/\">\r\n                  {user.name}\r\n                </NavLink>\r\n                <NavLink className=\"nav-link\" to=\"/logout\">\r\n                  Logout\r\n                </NavLink>\r\n              </React.Fragment>\r\n            )}\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport auth from \"../../services/authService\";\r\n\r\nconst ProtectedRoute = props => {\r\n  const { path, component: Component, render, ...rest } = props;\r\n  const user = auth.getCurrentUser();\r\n  console.log(\"protected route called\");\r\n  console.log(props);\r\n\r\n  return (\r\n    <Route\r\n      path={path}\r\n      {...rest}\r\n      render={props => {\r\n        if (!user)\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: { from: props.location }\r\n              }}\r\n            />\r\n          );\r\n        return Component ? <Component {...props} /> : render(props);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Customers extends Component {\r\n  state = {};\r\n  render() {\r\n    return <h1>Customers</h1>;\r\n  }\r\n}\r\n\r\nexport default Customers;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Rentals extends Component {\r\n  state = {};\r\n  render() {\r\n    return <h1>Rentals</h1>;\r\n  }\r\n}\r\n\r\nexport default Rentals;\r\n","import React, { Component } from \"react\";\r\n\r\nclass NotFound extends Component {\r\n  state = {};\r\n  render() {\r\n    return <h1>Not found</h1>;\r\n  }\r\n}\r\n\r\nexport default NotFound;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Input extends Component {\r\n  render() {\r\n    const { name, label, error, ...rest } = this.props;\r\n\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label htmlFor={name}>{label}</label>\r\n        <input name={name} id={name} className=\"form-control\" {...rest} />\r\n        {error && <div className=\"alert alert-danger\">{error}</div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Input;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Select extends Component {\r\n  render() {\r\n    const { name, label, options, error, ...rest } = this.props;\r\n\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label htmlFor={name}>{label}</label>\r\n        <select name={name} id={name} {...rest} className=\"form-control\">\r\n          <option value=\"\" />\r\n          {options.map(option => (\r\n            <option key={option._id} value={option._id}>\r\n              {option.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        {error && <div className=\"alert alert-danger\">{error}</div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Select;\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"@hapi/joi\";\r\nimport Input from \"./input\";\r\nimport Select from \"./select\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    data: {},\r\n    errors: {}\r\n  };\r\n\r\n  schema = {};\r\n\r\n  validate = () => {\r\n    const options = { abortEarly: false };\r\n    const { error } = Joi.object(this.schema).validate(\r\n      this.state.data,\r\n      options\r\n    );\r\n    if (!error) return null;\r\n\r\n    const errors = {};\r\n    for (let item of error.details) {\r\n      errors[item.path[0]] = item.message;\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value };\r\n    const propertySchema = { [name]: this.schema[name] };\r\n    const { error } = Joi.object(propertySchema).validate(obj);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const errors = this.validate();\r\n    // if there are no errors we update empty object\r\n    this.setState({ errors: errors || {} });\r\n    if (errors) return; //if there are errors we return before calling the server\r\n\r\n    //call the server\r\n    this.doSubmit();\r\n  };\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const errors = { ...this.state.errors };\r\n    const errorMessage = this.validateProperty(input);\r\n\r\n    if (errorMessage) {\r\n      errors[input.name] = errorMessage;\r\n    } else {\r\n      //if error is gone we need to remove it\r\n      delete errors[input.name];\r\n    }\r\n\r\n    const data = { ...this.state.data };\r\n    data[input.name] = input.value;\r\n    this.setState({ data, errors });\r\n  };\r\n\r\n  renderInput(name, label, type = \"text\") {\r\n    const { data, errors } = this.state;\r\n\r\n    return (\r\n      <Input\r\n        type={type}\r\n        value={data[name]}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n        name={name}\r\n        label={label}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderSelect(name, label, options) {\r\n    const { data, errors } = this.state;\r\n\r\n    return (\r\n      <Select\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        options={options}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderButton(label) {\r\n    return (\r\n      <button\r\n        type=\"submit\"\r\n        className=\"btn btn-primary\"\r\n        disabled={this.validate()}\r\n      >\r\n        {label}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Joi from \"@hapi/joi\";\r\nimport Form from \"./form\";\r\nimport auth from \"../../services/authService\";\r\n\r\nclass LoginForm extends Form {\r\n  state = {\r\n    data: { username: \"\", password: \"\" },\r\n    errors: {}\r\n  };\r\n  Joi = require(\"@hapi/joi\");\r\n\r\n  schema = {\r\n    username: Joi.string()\r\n      .required()\r\n      .label(\"User name\"),\r\n    password: Joi.string()\r\n      .required()\r\n      .label(\"Password\")\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    const { state } = this.props.location;\r\n    console.log(this.props);\r\n    //call the server\r\n    try {\r\n      const { username: email, password } = this.state.data;\r\n      await auth.login(email, password);\r\n      window.location = state ? state.from.pathname : \"/\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.password = ex.response.data;\r\n        errors.username = ex.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (auth.getCurrentUser()) return <Redirect to=\"/\" />;\r\n\r\n    return (\r\n      <div>\r\n        <h1>Login form</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"Username\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {this.renderButton(\"Login\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import http from \"./httpService\";\r\n\r\nconst apiEndpoint = \"/users\";\r\n\r\nexport function register(user) {\r\n  // we have to change user object because in our reg. form we use username property but api expects email\r\n  const standardUser = {};\r\n  standardUser.email = user.username;\r\n  standardUser.name = user.name;\r\n  standardUser.password = user.password;\r\n\r\n  return http.post(apiEndpoint, standardUser);\r\n}\r\n","import React from \"react\";\r\nimport Joi from \"@hapi/joi\";\r\nimport Form from \"./form\";\r\nimport * as userService from \"../../services/userService\";\r\nimport auth from \"../../services/authService\";\r\n\r\nclass RegisterForm extends Form {\r\n  state = {\r\n    data: { username: \"\", password: \"\", name: \"\" },\r\n    errors: {}\r\n  };\r\n  Joi = require(\"@hapi/joi\");\r\n\r\n  schema = {\r\n    username: Joi.string()\r\n      .required()\r\n      .label(\"User name\")\r\n      .email({ tlds: { allow: [\"com\", \"net\"] } }),\r\n    password: Joi.string()\r\n      .required()\r\n      .min(5)\r\n      .label(\"Password\"),\r\n    name: Joi.string()\r\n      .required()\r\n      .label(\"Name\")\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    //call the server\r\n    try {\r\n      const response = await userService.register(this.state.data);\r\n      auth.register(response);\r\n      window.location = \"/\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = ex.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Register form</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"Username\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {this.renderInput(\"name\", \"Name\")}\r\n          {this.renderButton(\"Register\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterForm;\r\n","import React from \"react\";\r\nimport Joi from \"@hapi/joi\";\r\nimport Form from \"./form\";\r\nimport { getGenres } from \"../../services/getGenres\";\r\nimport { getMovie, saveMovie } from \"../../services/moviesService\";\r\n\r\nclass MovieForm extends Form {\r\n  state = {\r\n    data: { title: \"\", genreId: \"\", numberInStock: \"\", dailyRentalRate: \"\" },\r\n    genres: [],\r\n    errors: {}\r\n  };\r\n  Joi = require(\"@hapi/joi\");\r\n\r\n  schema = {\r\n    _id: Joi.string(),\r\n    title: Joi.string()\r\n      .required()\r\n      .label(\"Title\"),\r\n    genreId: Joi.string()\r\n      .required()\r\n      .label(\"Genre\"),\r\n    numberInStock: Joi.string()\r\n      .required()\r\n      .label(\"Stock\"),\r\n    dailyRentalRate: Joi.string()\r\n      .required()\r\n      .label(\"Rate\")\r\n  };\r\n\r\n  async populateGenres() {\r\n    const { data: genres } = await getGenres();\r\n    console.log(\"movie form genres\", genres);\r\n    this.setState({ genres: genres });\r\n  }\r\n\r\n  async populateMovie() {\r\n    try {\r\n      const movieId = this.props.match.params.id;\r\n      console.log(\"after populate movie in movie form, movieId:\", movieId);\r\n      if (movieId === \"new\") return;\r\n      const { data: movie } = await getMovie(movieId);\r\n      this.setState({ data: this.mapToViewModel(movie) }); // we add _id property to movie object\r\n    } catch (error) {\r\n      if (error.response && error.response.status >= 404)\r\n        return this.props.history.replace(\"/not-found\");\r\n    } //if its another response.status then the @sentry/browser will take care of handling error\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.populateGenres();\r\n    await this.populateMovie();\r\n  }\r\n\r\n  mapToViewModel(movie) {\r\n    return {\r\n      _id: movie._id,\r\n      title: movie.title,\r\n      genreId: movie.genre._id,\r\n      numberInStock: movie.numberInStock,\r\n      dailyRentalRate: movie.dailyRentalRate\r\n    };\r\n  }\r\n\r\n  // movie form button\r\n  async doSubmit() {\r\n    //call the server\r\n    //data is a movie object\r\n    await saveMovie(this.state.data); // if its new movie, data will be empty object\r\n    this.props.history.push(\"/movies\");\r\n    console.log(\"form submitted\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Movie form</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"title\", \"Title\")}\r\n          {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\r\n          {this.renderInput(\"numberInStock\", \"Number in stock\")}\r\n          {this.renderInput(\"dailyRentalRate\", \"Rate\")}\r\n          {this.renderButton(\"Save\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieForm;\r\n","import { Component } from \"react\";\r\nimport auth from \"../../services/authService\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    auth.logout();\r\n    window.location = \"/\";\r\n  }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Logout;\r\n","import React, { Component } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport Movies from \"./components/movies\";\nimport NavBar from \"./components/standard/navBar\";\nimport ProtectedRoute from \"./components/standard/protectedRoute\";\nimport Customers from \"./components/customers\";\nimport Rentals from \"./components/rentals\";\nimport NotFound from \"./components/not-found\";\nimport LoginForm from \"./components/standard/loginForm\";\nimport RegisterForm from \"./components/standard/registerForm\";\nimport MovieForm from \"./components/standard/movieForm\";\nimport Logout from \"./components/standard/logout\";\nimport auth from \"./services/authService\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {};\n\n  componentDidMount() {\n    const user = auth.getCurrentUser();\n    this.setState({ user });\n  }\n\n  render() {\n    const { user } = this.state;\n\n    return (\n      <main className=\"container\">\n        <ToastContainer />\n        <NavBar user={user} />\n        <div>\n          <Switch>\n            {/* routes have to be in order from most details to less details or you have to use \"exact\" keyword */}\n            <Route path=\"/logout\" component={Logout} />\n            <Route path=\"/login\" component={LoginForm} />\n            <Route path=\"/register\" component={RegisterForm} />\n            <ProtectedRoute path=\"/movies/:id\" component={MovieForm} />\n            <Route\n              path=\"/movies\"\n              render={props => <Movies {...props} user={user} />}\n            />\n            <Route path=\"/customers\" component={Customers} />\n            <Route path=\"/rentals\" component={Rentals} />\n            <Route path=\"/not-found\" component={NotFound} />\n            <Redirect from=\"/\" exact to=\"/movies\" />\n            <Redirect to=\"/not-found\" />\n          </Switch>\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as Sentry from \"@sentry/browser\";\r\n\r\nfunction init() {\r\n  Sentry.init({\r\n    dsn: \"https://2c6a6f0b108b43c6a80dcfeb9da961be@sentry.io/1962493\"\r\n  });\r\n}\r\n\r\nfunction log(error) {\r\n  Sentry.captureException(error);\r\n}\r\n\r\nexport default {\r\n  init,\r\n  log\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport logService from \"./services/logService\";\n\n//show environment variables\nconsole.log(process.env);\n\nlogService.init(); //using Sentry logging service\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}